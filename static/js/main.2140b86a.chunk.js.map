{"version":3,"sources":["components/Footer.js","components/NavResult.js","components/NavResultList.js","utils/search.js","components/Nav.js","pages/Article/Article.js","pages/Home/SearchBox.js","pages/Home/Result.js","pages/Home/ResultList.js","pages/Home/Home.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["Footer","darkMode","useDarkMode","react_default","a","createElement","className","onClick","document","querySelector","scrollIntoView","behavior","dist","toggle","NavResult","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openLink","bind","assertThisInitialized","history","push","encodeURIComponent","result","title","setQuery","key","src","image","alt","text","Component","withRouter","NavResultList","results","message","totalResults","keys","length","map","components_NavResult","search","_x","_x2","_x3","_search","apply","arguments","_callee2","query","setState","state","res","_loop","_key","regenerator_default","wrap","_context2","prev","next","wiki","apiUrl","sent","abrupt","page","then","_ref","asyncToGenerator","mark","_callee","_results","_context","mainImage","summary","stop","_x4","Nav","handleSearchUpdate","evt","target","value","_this2","Link","to","type","placeholder","onChange","NavResultList_NavResultList","Article","sidebar","React","createRef","article","match","params","getData","prevProps","location","current","innerHTML","decodeURIComponent","replace","loadingTimeout","setTimeout","html","clearTimeout","processHtml","catch","err","String","_this3","el","DOMParser","parseFromString","querySelectorAll","forEach","getAttribute","addEventListener","preventDefault","test","substr","charAt","window","open","focus","elementsWithStyle","styleRegex","element","style","setAttribute","images","remove","removeAttribute","amountRemoved","appendChild","content","Nav_Nav","ref","Search","updateQuery","searchbox","expanded","autoFocus","Result","ResultList","id","Result_Result","Home","SearchBox_Search","ResultList_ResultList","Routes","BrowserRouter","Switch","Route","path","component","components_Footer","App","src_Routes","Boolean","hostname","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2140b86a.chunk.js","sourcesContent":["import React from 'react'\nimport { Moon, ArrowUp } from 'react-feather'\nimport useDarkMode from 'use-dark-mode';\n\nconst Footer = () => {\n    const darkMode = useDarkMode(false);\n\n    const scrollToTop = () => {\n        document.querySelector('nav').scrollIntoView({\n            behavior: 'smooth'\n        });\n    }\n\n    return (\n        <div className=\"footer fixed w-screen flex items-center justify-between flex-wrap p-6\">\n            \n            <div>\n                {/* Darkmode toggle button */}\n                <button onClick={scrollToTop} className=\"outline-none pb-5\">\n                    <ArrowUp className=\"whiteInDarkMode\" />\n                </button><br />\n                {/* Darkmode toggle button */}\n                <button onClick={darkMode.toggle} className=\"outline-none\">\n                    <Moon className=\"whiteInDarkMode\" />\n                </button>\n            </div>\n            <div />\n        </div>\n    )\n}\nexport default Footer;","/**\n * Single search result\n */\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass NavResult extends Component {\n    constructor(props) {\n        super(props);\n\n        this.openLink = this.openLink.bind(this)\n    }\n\n    openLink() {\n        this.props.history.push('/wiki/' + encodeURIComponent(this.props.result.title));\n        this.props.setQuery('');\n    }\n\n    render() {\n        const result = this.props.result;\n\n        return (\n            <div key={result.title}>\n                <div className=\"result overflow-hidden h-48 p-4 flex mb-12 no-underline color-inherit cursor-pointer\" onClick={this.openLink}>\n                        <div className=\"result-img-container\">\n                            <img className=\"result-img h-32 pr-12\" src={result.image} alt=\"\" />\n                        </div>\n                        <div className=\"result-text-container\">\n                            <h4>{result.title}</h4>\n                            <p className=\"text-grey text-xs leading-loose\">{result.text}</p>\n                        </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(NavResult);","/**\n * List of search results\n */\nimport React, { Component } from 'react'\nimport NavResult from './NavResult'\n\nexport default class NavResultList extends Component {\n    render() {\n        const results = this.props.results;\n\n        // Set message returned if there are no results (yet)\n        let message = 'Let me ask Wikipedia for that...'\n        if (this.props.totalResults === 0) {\n            message = 'I could not find any results';\n        }\n\n        return (\n            <div className=\"absolute results mt-10 bg-main w-1/2 md:w-1/3\">\n                {\n                    // Show results if found, otherwise display message\n                    Object.keys(results).length > 0 ? Object.keys(results).map(result => (\n                        <NavResult key={results[result].title} result={results[result]} setQuery={this.props.setQuery} />\n                    )) : (\n                        <div className=\"result overflow-hidden h-48 p-4 flex mb-12 no-underline color-inherit\">\n                            <div className=\"w-100\">\n                                <p className=\"font-light\">\n                                    {message}\n                                </p>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}","import wiki from 'wikijs'\n\n// Query Wikipedia for search query\nexport default async function search(query, setState, state) {\n    // Reset number of results\n    setState({\n        totalResults: 10\n    })\n\n    // Get query results\n    let results = (await wiki({ apiUrl: 'https://en.wikipedia.org/w/api.php' }).search(query)).results;\n\n    // Show general information\n    if (query === state().query) {\n        setState({\n        results: {},\n        totalResults: results.length\n        })\n\n        // Add first 10 results to results list\n        for (let key = 0; key < 10 && key < results.length; key++) {\n            let res = state().results;\n            res[key] = {\n                title: results[key],\n                image: '',\n                text: 'Loading details...'\n            };\n\n            setState({\n                results: res\n            })\n        }\n    } else {\n        // We are not the current search query anymore: Abort\n        return;\n    }\n\n    // Query for details on the first 10 results\n    for (let key = 0; key < 10 && key < results.length; key++) {\n        wiki({ apiUrl: 'https://en.wikipedia.org/w/api.php' }).page(results[key]).then(async (page) => {\n        // Get image and summary\n        let image = await page.mainImage()\n        let text = await page.summary()\n\n        let result = {\n            title: results[key],\n            image,\n            text\n        }\n\n        // Check if we are still the active query, otherwise don't update details\n        if (query === state().query) {\n            let results = state().results;\n            results[key] = result;\n\n            setState({\n            results\n            })\n        }\n        });\n    }\n}","/**\n * Navbar used on article pages\n */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport NavResultList from './NavResultList';\nimport search from '../utils/search'\n\nexport default class Nav extends Component {\n    state = {\n        query: '', // Current search query\n        results: {}, // Current search results\n        totalResults: 10 // Number of results found\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleSearchUpdate = this.handleSearchUpdate.bind(this);\n        this.setQuery = this.setQuery.bind(this);\n    }\n\n    // Handle update of search query input\n    handleSearchUpdate(evt) {\n        let query = evt.target.value;\n\n        this.setQuery(query);\n    }\n\n    // Handle update of search query\n    setQuery(query) {\n        this.setState({\n            query\n        });\n        search(query, state => {\n            this.setState(state)\n        }, () => {\n            return this.state\n        });\n    }\n\n    render() {\n        return (\n            <nav className=\"header flex items-center justify-between flex-wrap p-6 w-full\">\n                <div className=\"md:w-1/3\" />\n                {/* Center: \"minimalpedia\" as link to home */}\n                <Link to=\"/\" className=\"w-1/4 md:w-1/3 no-underline flex justify-left md:justify-center\">\n                    <span className=\"font-light\">minimal</span><span className=\"font-normal\">pedia</span>\n                </Link>\n                {/* Right: Searchbox */}\n                <div className=\"w-1/2 md:w-1/3\">\n                    <input type=\"text\" className=\"w-full md:w-3/4 outline-none bg-transparent float-right\" placeholder=\"Search...\" onChange={ this.handleSearchUpdate } value={this.state.query} />\n                    { this.state.query !== '' && (<NavResultList results={ this.state.results } totalResults={this.state.totalResults} setQuery={this.setQuery} />) }\n                </div>\n            </nav>\n        )\n    }\n}","/**\n * Individual article page\n */\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Nav from '../../components/Nav'\n\nimport wiki from 'wikijs'\nimport './article.css'\n\nclass Article extends Component {\n  state = {\n    image: '', // Main article image\n    title: '' // Article title\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.sidebar = React.createRef();\n    this.text = React.createRef();\n  }\n\n  // Load article data on mount\n  componentDidMount() {\n      let article = this.props.match.params.article;\n      this.getData(article);\n  }\n\n  // Load article data on location update\n  componentDidUpdate(prevProps) {\n    const locationChanged = this.props.location !== prevProps.location;\n\n    if (locationChanged) {\n      // Reset page content\n      this.sidebar.current.innerHTML = '';\n      this.text.current.innerHTML = 'Getting your article from Wikipedia...';\n      this.setState({\n          image: ''\n      });\n\n      let article = this.props.match.params.article;\n      this.getData(article);\n    }\n  }\n\n  // Get article data from wikipedia API\n  async getData(query) {\n    query = decodeURIComponent(query);\n\n    // Set article title to query\n    this.setState({\n        title: query\n    });\n    // Replace document title with article title\n    document.title = query.replace(/_/g, ' ') + ' - minimalpedia';\n\n    // Set timeout to update loading message after 10 seconds if still loading\n    let loadingTimeout = setTimeout(() => {\n      this.text.current.innerHTML = 'Still loading the article from Wikipedia...';\n    }, 10000);\n\n    // Get information using wikipedia API\n    wiki({ apiUrl: 'https://en.wikipedia.org/w/api.php' }).page(query).then((page) => {\n        // Get image\n        page.mainImage().then(image => {\n          this.setState({\n            image\n          });\n        })\n\n        // Get and process HTML\n        page.html().then(html => {\n          clearTimeout(loadingTimeout);\n          this.processHtml(html);\n        })\n    }).catch(err => {\n      clearTimeout(loadingTimeout);\n\n      // Replace common errors with custom error messages\n      if (String(err) === \"Error: No article found\") {\n        err = 'Sorry, but we couldn\\'t find this article on Wikipedia'\n      }\n\n      // Display error\n      this.text.current.innerHTML = err;\n    });\n  }\n\n  // Process HTML from wikipedia for use on the page\n  processHtml(html) {\n    // Parse HTML\n    let parser = new DOMParser();\n    let el = parser.parseFromString('<div>' + html + '</div>', 'text/html');\n\n    // Replace links\n    el.querySelectorAll('a').forEach(a => {\n      let to = a.getAttribute('href');\n\n      a.addEventListener('click', evt => {\n        evt.preventDefault();\n\n        // Is link to another article? Open link with react-router\n        if (/^\\/wiki\\/.*/.test(to)) {\n          // Open Wiki article\n          let article = encodeURIComponent(to.substr(6));\n          this.props.history.push('/wiki/' + article);\n\n        // Is link to anchor? Scroll to anchor smoothly\n        } else if (to.charAt(0) === '#') {\n          document.querySelector(to).scrollIntoView({\n            behavior: 'smooth'\n          });\n\n        // Else it is an external link - open the link in a new tab\n        } else {\n          var newTab = window.open(to, '_blank');\n          newTab.focus();\n        }\n      });\n    });\n\n    // Remove specific style attributes\n    let elementsWithStyle = el.querySelectorAll('[style]:not([style=\"\"]');\n    if (elementsWithStyle) {\n      // This regex will be selecting the following CSS styles and their values:\n      // - background\n      // - background-color\n      // - border\n      // - border-*\n      // - color\n      let styleRegex = /(background(-color)?|border(-[^:]*)?|color):.*?(;|$)/gi;\n      elementsWithStyle.forEach(element => {\n        let style = element.getAttribute('style');\n\n        // Remove attributes stated above from the element style\n        style = style.replace(styleRegex, '');\n\n        element.setAttribute('style', style);\n      });\n    }\n\n    /////// PROCESS SIDEBAR ///////\n    // Extract sidebar\n    let sidebar = el.querySelectorAll('table.infobox')[0];\n\n    // Only process sidebar if a sidebar exists\n    if (sidebar) {\n      // Remove images from sidebar\n      let images = sidebar.querySelectorAll('.image');\n      if (images) {\n        images.forEach(element => {\n          element.remove()\n        });\n      }\n\n\n      // Remove wikipedia styles from sidebar table\n      sidebar.removeAttribute('style');\n      let elementsWithStyle = sidebar.querySelectorAll('[style]:not([style=\"\"]');\n      if (elementsWithStyle) {\n        elementsWithStyle.forEach(element => {\n          element.removeAttribute('style')\n        });\n      }\n\n      // Remove first two lines of table as they are simply the article title\n      let amountRemoved = 0;\n      sidebar.querySelectorAll('tr').forEach(element => {\n        if (amountRemoved < 2) {\n          element.remove();\n        } else {\n          return false;\n        }\n        amountRemoved++;\n      });\n\n      // Insert sidebar into page\n      this.sidebar.current.innerHTML = '';\n      this.sidebar.current.appendChild(sidebar);\n    }\n\n    /////// PROCESS MAIN CONTENT ///////\n    let content = el.querySelectorAll('div')[0];\n\n    // Remove sidebar\n    // content.querySelectorAll('table.infobox')[0].remove();\n\n    // Remove edit links\n    content.querySelectorAll('.mw-editsection').forEach(el => {\n      el.remove()\n    });\n\n    // Insert main content into page\n    this.text.current.innerHTML = '';\n    this.text.current.appendChild(content);\n  }\n\n render() {\n   return (\n     <div>\n      <Nav />\n\n      <div className=\"md:flex md:min-h-screen article\">\n        {/* Sidebar */}\n        <div className=\"w-screen md:min-h-screen md:w-1/3 pl-16 p-6 sidebar\">\n          <img className=\"w-100\" src={this.state.image} alt=\"\" />\n          <div className=\"sidebar-table\" ref={ this.sidebar } />\n        </div>\n\n        {/* Main content */}\n        <div className=\"w-screen md:w-2/3 pl-16 md:pl-6 p-6 info\">\n          <h2>{ this.state.title.replace(/_/g, ' ') }</h2>\n          <div ref={ this.text }>Getting your article from Wikipedia...</div>\n        </div>\n        \n      </div>\n     </div>\n   );\n }\n}\nexport default withRouter(Article);","import React, { Component } from 'react'\n\nexport default class Search extends Component {\n    state = {\n        query: '' // Current search query\n    }\n\n    constructor(props) {\n        super(props);\n  \n        this.updateQuery = this.updateQuery.bind(this);\n        this.searchbox = React.createRef();\n    }\n\n    // Update search query\n    updateQuery(evt) {\n        this.setState({\n            query: evt.target.value\n        });\n        this.props.onChange(evt.target.value);\n    }\n\n    // Focus searchbox when component mounts\n    componentDidMount() {\n        this.searchbox.current.focus();\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={ \"head px-16 \" + (this.props.expanded ? 'pt-32' : 'pt-10') }>\n                    {/* Heading */}\n                    <div className=\"heading text-center text-2xl\">\n                        <span className=\"font-light\">minimal</span><span className=\"font-normal\">pedia</span>\n                    </div>\n\n                    {/* Searchbox */}\n                    <div className={ \"search \" + (this.props.expanded ? 'pt-32' : '') }>\n                        <input \n                            type=\"text\" \n                            className=\"search-box h-48 w-full outline-none text-5xl font-bold bg-transparent\" \n                            placeholder=\"Search...\" \n                            value={ this.state.query } \n                            onChange={ this.updateQuery } \n                            ref={ this.searchbox }\n                            autoFocus />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","/**\n * Single search result\n */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Result extends Component {\n    render() {\n        const result = this.props.result;\n\n        return (\n            <div key={result.title}>\n                <Link to={\"/wiki/\" + encodeURIComponent(result.title)} className=\"result overflow-hidden h-48 p-4 flex mb-12 no-underline color-inherit\">\n                        <div className=\"result-img-container\">\n                            <img className=\"result-img h-32 pr-12\" src={result.image} alt=\"\" />\n                        </div>\n                        <div className=\"result-text-container\">\n                            <h2>{result.title}</h2>\n                            <p className=\"text-grey text-xs leading-loose\">{result.text}</p>\n                        </div>\n                </Link>\n            </div>\n        )\n    }\n}","/**\n * List of search results\n */\nimport React, { Component } from 'react'\nimport Result from './Result'\n\nexport default class ResultList extends Component {\n    render() {\n        const results = this.props.results;\n\n        // Set message returned if there are no results (yet)\n        let message = 'Let me ask Wikipedia for that...'\n        if (this.props.totalResults === 0) {\n            message = 'I could not find any results';\n        }\n\n        return (\n            <div className=\"results px-16 mt-3 display-none\" id=\"results\">\n                {\n                    // Show results if found, otherwise display message\n                    Object.keys(results).length > 0 ? Object.keys(results).map(result => (\n                        <Result key={results[result].title} result={results[result]} />\n                    )) : (\n                        <div className=\"result overflow-hidden h-48 p-4 flex mb-12 no-underline color-inherit\">\n                            <div className=\"w-100\">\n                                <h2 className=\"font-light\">\n                                    {message}\n                                </h2>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}","/**\n * Homepage/Search page\n */\nimport React, { Component } from 'react'\n\nimport SearchBox from './SearchBox'\nimport ResultList from './ResultList'\n\nimport search from '../../utils/search';\n\nimport './home.css'\n\nexport default class Home extends Component {\n  state = {\n    query: '', // Current search query\n    results: {}, // Current search results\n    totalResults: 10 // Number of results found\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleSearchUpdate = this.handleSearchUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    // Update title. This will reset any title set by the article pages\n    document.title = 'minimalpedia';\n  }\n\n  // Handle update of search query\n  handleSearchUpdate(query) {\n    this.setState({\n      query\n    });\n    search(query, state => {\n      this.setState(state)\n    }, () => {\n      return this.state\n    });\n  }\n\n render() {\n   return (\n     <div>\n       <SearchBox expanded={ this.state.query === '' } onChange={ this.handleSearchUpdate } />\n       { this.state.query !== '' && (<ResultList results={ this.state.results } totalResults={this.state.totalResults} />) }\n     </div>\n   );\n }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Footer from './components/Footer'\n\nimport Article from './pages/Article/Article';\nimport Home from './pages/Home/Home';\n\nconst Routes = (props) => (\n  <Router {...props}>\n    <div>\n      <Switch>\n        <Route path=\"/wiki/:article\" component={Article} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n      <Footer />\n    </div>\n  </Router>\n);\nexport default Routes;","import React, { Component } from 'react'\nimport Routes from './Routes'\n\n// Fonts\nimport 'typeface-open-sans';\nimport 'typeface-merriweather';\n\n// Styles\nimport './styles/tailwind.css'\nimport './styles/style.css'\n\nexport default class App extends Component {\n  render() {\n    return <Routes />\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}