{"version":3,"sources":["components/Footer.js","components/NavResult.js","components/NavResultList.js","utils/search.js","components/Nav.js","pages/Article/hoverPreview.js","pages/Article/Article.js","pages/Home/SearchBox.js","pages/Home/Result.js","pages/Home/ResultList.js","pages/Home/languages.js","pages/Home/Home.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","router","darkMode","useDarkMode","react_default","a","createElement","className","onClick","scrollToElement","document","querySelector","test","location","pathname","scrollIntoView","behavior","dist","toggle","NavResult","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openLink","bind","assertThisInitialized","history","push","encodeURIComponent","result","title","language","setQuery","key","src","image","alt","text","Component","NavResultList","results","message","totalResults","keys","length","map","components_NavResult","search","_x","_x2","_x3","_search","apply","arguments","_callee2","query","setState","state","res","_loop","_key","_args2","regenerator_default","wrap","_context2","prev","next","undefined","wiki","apiUrl","concat","sent","abrupt","page","then","_ref","asyncToGenerator","mark","_callee","_results","_context","mainImage","summary","stop","_x4","Nav","handleSearchUpdate","evt","target","value","_this2","Link","to","type","placeholder","onChange","NavResultList_NavResultList","HoverPreview","getArticleInfo","prevProps","article","decodeURIComponent","style","top","position","left","window","innerWidth","display","show","replace","substr","Article","hover","sidebarOpen","toggleSidebar","sidebar","React","createRef","match","params","getData","current","innerHTML","scrollTo","loadingTimeout","setTimeout","html","clearTimeout","processHtml","catch","err","String","_this3","el","DOMParser","parseFromString","querySelectorAll","forEach","getAttribute","addEventListener","preventDefault","open","focus","charAt","isOnHover","pageOnHoverStart","objectSpread","pageY","pageX","elementsWithStyle","styleRegex","element","setAttribute","images","remove","removeAttribute","amountRemoved","appendChild","thumbnails","content","Nav_Nav","hoverPreview_HoverPreview","ref","Search","updateQuery","handleLanguageChange","searchbox","onLanguageChange","blur","expanded","availibleLanguages","lang","name","autoFocus","Result","ResultList","id","Result_Result","languages","Home","browserLanguage","navigator","find","handleLanguageUpdate","SearchBox_Search","ResultList_ResultList","Routes","HashRouter","Switch","Route","path","component","components_Footer","App","src_Routes","Boolean","hostname","ReactDOM","render","App_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c35e2795.chunk.js","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Moon, ArrowUp } from 'react-feather'\nimport useDarkMode from 'use-dark-mode';\n\nconst Footer = (router) => {\n    const darkMode = useDarkMode(false);\n\n    const scrollToTop = () => {\n        // Element to scroll to, .head by default\n        let scrollToElement = document.querySelector('.head');\n\n        if (/\\/wiki\\/.*/.test(router.location.pathname)) {\n            scrollToElement = document.querySelector('nav')\n        }\n\n        // Scroll to element smoothly\n        scrollToElement.scrollIntoView({\n            behavior: 'smooth'\n        });\n    }\n\n    return (\n        <div className=\"footer fixed w-screen flex items-center justify-between flex-wrap p-6\">\n            \n            <div>\n                {/* Scroll to top button */}\n                <button onClick={scrollToTop} className=\"outline-none pb-5\">\n                    <ArrowUp className=\"whiteInDarkMode\" />\n                </button><br />\n                {/* Darkmode toggle button */}\n                <button onClick={darkMode.toggle} className=\"outline-none\">\n                    <Moon className=\"whiteInDarkMode\" />\n                </button>\n            </div>\n\n            {/* Empty <div> to get the footer icons to force footer icons to the left */}\n            <div />\n        </div>\n    )\n}\nexport default withRouter(Footer);","/**\n * Single search result\n */\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass NavResult extends Component {\n    constructor(props) {\n        super(props);\n\n        this.openLink = this.openLink.bind(this)\n    }\n\n    openLink() {\n        this.props.history.push('/wiki/' + encodeURIComponent(this.props.result.title) + '/' + this.props.language);\n        this.props.setQuery('');\n    }\n\n    render() {\n        const result = this.props.result;\n\n        return (\n            <div key={result.title}>\n                <div className=\"result overflow-hidden h-48 p-4 flex mb-12 no-underline color-inherit cursor-pointer\" onClick={this.openLink}>\n                        <div className=\"result-img-container\">\n                            <img className=\"result-img h-32 pr-12\" src={result.image} alt=\"\" />\n                        </div>\n                        <div className=\"result-text-container\">\n                            <h4>{result.title}</h4>\n                            <p className=\"text-grey text-xs leading-loose\">{result.text}</p>\n                        </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(NavResult);","/**\n * List of search results\n */\nimport React, { Component } from 'react'\nimport NavResult from './NavResult'\n\nexport default class NavResultList extends Component {\n    render() {\n        const results = this.props.results;\n\n        // Set message returned if there are no results (yet)\n        let message = 'Let me ask Wikipedia for that...'\n        if (this.props.totalResults === 0) {\n            message = 'I could not find any results';\n        }\n\n        return (\n            <div className=\"absolute results mt-10 bg-main w-1/2 md:w-1/3\">\n                {\n                    // Show results if found, otherwise display message\n                    Object.keys(results).length > 0 ? Object.keys(results).map(result => (\n                        <NavResult key={results[result].title} result={results[result]} setQuery={this.props.setQuery} language={this.props.language} />\n                    )) : (\n                        <div className=\"result overflow-hidden h-48 p-4 flex mb-12 no-underline color-inherit\">\n                            <div className=\"w-100\">\n                                <p className=\"font-light\">\n                                    {message}\n                                </p>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}","import wiki from 'wikijs'\n\n// Query Wikipedia for search query\nexport default async function search(query, setState, state, language = 'en') {\n    // Reset number of results\n    setState({\n        totalResults: 10\n    })\n\n    // Get query results\n    let results = (await wiki({ apiUrl: `https://${language}.wikipedia.org/w/api.php` }).search(query)).results;\n\n    // Show general information\n    if (query === state().query) {\n        setState({\n        results: {},\n        totalResults: results.length\n        })\n\n        // Add first 10 results to results list\n        for (let key = 0; key < 10 && key < results.length; key++) {\n            let res = state().results;\n            res[key] = {\n                title: results[key],\n                image: '',\n                text: 'Loading details...'\n            };\n\n            setState({\n                results: res\n            })\n        }\n    } else {\n        // We are not the current search query anymore: Abort\n        return;\n    }\n\n    // Query for details on the first 10 results\n    for (let key = 0; key < 10 && key < results.length; key++) {\n        wiki({ apiUrl: `https://${language}.wikipedia.org/w/api.php` }).page(results[key]).then(async (page) => {\n            // Get image and summary\n            let image = await page.mainImage()\n            let text = await page.summary()\n\n            let result = {\n                title: results[key],\n                image,\n                text\n            }\n\n            // Check if we are still the active query, otherwise don't update details\n            if (query === state().query) {\n                let results = state().results;\n                results[key] = result;\n\n                setState({\n                results\n                })\n            }\n        });\n    }\n}","/**\n * Navbar used on article pages\n */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport NavResultList from './NavResultList';\nimport search from '../utils/search'\n\nexport default class Nav extends Component {\n    state = {\n        query: '', // Current search query\n        results: {}, // Current search results\n        totalResults: 10 // Number of results found\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleSearchUpdate = this.handleSearchUpdate.bind(this);\n        this.setQuery = this.setQuery.bind(this);\n    }\n\n    // Handle update of search query input\n    handleSearchUpdate(evt) {\n        let query = evt.target.value;\n\n        this.setQuery(query);\n    }\n\n    // Handle update of search query\n    setQuery(query) {\n        this.setState({\n            query\n        });\n        search(query, state => {\n            this.setState(state)\n        }, () => {\n            return this.state\n        }, this.props.language);\n    }\n\n    render() {\n        return (\n            <nav className=\"header flex items-center justify-between flex-wrap p-6 w-full\">\n                <div className=\"md:w-1/3\" />\n                {/* Center: \"minimalpedia\" as link to home */}\n                <Link to=\"/\" className=\"w-1/4 md:w-1/3 no-underline flex justify-left md:justify-center\">\n                    <span className=\"font-light\">minimal</span><span className=\"font-normal\">pedia</span>\n                </Link>\n                {/* Right: Searchbox */}\n                <div className=\"w-1/2 md:w-1/3\">\n                    <input type=\"text\" className=\"w-full md:w-3/4 outline-none bg-transparent float-right\" placeholder=\"Search...\" onChange={ this.handleSearchUpdate } value={this.state.query} />\n                    { this.state.query !== '' && (<NavResultList results={ this.state.results } totalResults={this.state.totalResults} setQuery={this.setQuery} language={this.props.language} />) }\n                </div>\n            </nav>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport wiki from 'wikijs'\nimport './hoverPreview.css'\n\nexport default class HoverPreview extends Component {\n    state = {\n        image: '',\n        title: '',\n        text: ''\n    }\n\n    // Load article when component mounts\n    componentDidMount() {\n        this.getArticleInfo();\n    }\n\n    // Load article data on article change\n    componentDidUpdate(prevProps) {\n        const articleChanged = this.props.article !== this.state.title;\n\n        if (articleChanged) {\n            // Reset state\n            this.setState({\n                image: '',\n                text: 'Loading article info...'\n            })\n\n            this.getArticleInfo();\n        }\n    }\n\n    // Get information about current hover article from Wikipedia API\n    getArticleInfo() {\n        this.setState({\n            title: this.props.article\n        })\n\n        wiki({ apiUrl: `https://${this.props.language}.wikipedia.org/w/api.php` }).page(decodeURIComponent(this.props.article)).then((page) => {\n            // Get image and summary\n            page.mainImage().then(image => {\n                this.setState({image})\n            })\n            page.summary().then(text => {\n                this.setState({text})\n            })\n        });\n    }\n\n    render() {\n        const props = this.props;\n        const state = this.state;\n\n        return (\n            <Link \n                to={\"/wiki/\" + encodeURIComponent(props.article) + '/' + props.language} \n                className=\"hover-preview max-w-xs absolute overflow-hidden shadow-lg bg-secondary z-10\"\n                style={{\n                    top: props.position[0] + 15 + 'px',\n                    // Only move to right if screen is wider than 500px\n                    left: window.innerWidth > 500 ? props.position[1] + 'px' : '1rem',\n                    display: props.show ? '' : 'none'\n                }}>\n\n                {/* Head image */}\n                <img className=\"preview-image w-full h-32\" src={state.image} alt=\"\" />\n\n                <div className=\"px-6 py-4\">\n                    {/* Heading */}\n                    <div className=\"font-bold text-xl mb-2\">{decodeURIComponent(props.article).replace(/_/g, ' ')}</div>\n\n                    {/* Text preview */}\n                    <p className=\"text-grey-darker text-2xs\">\n                        { state.text.substr(0, 200) }...\n                    </p>\n                </div>\n            </Link>\n        )\n    }\n}","/**\n * Individual article page\n */\nimport React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport Nav from '../../components/Nav'\nimport HoverPreview from './hoverPreview';\nimport { ChevronDown, ChevronUp } from 'react-feather'\n\nimport wiki from 'wikijs'\nimport './article.css'\n\nclass Article extends Component {\n  state = {\n    image: '', // Main article image\n    title: '', // Article title\n    hover: {  // Information for the hover preview\n      show: false,  // Show the hover preview?\n      position: [ 0, 0 ], // Position of the hover preview\n      article: '' // Article to show in the hover preview\n    },\n    sidebarOpen: false // Sidebar opened/closed on small devices\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.toggleSidebar = this.toggleSidebar.bind(this)\n\n    this.sidebar = React.createRef();\n    this.text = React.createRef();\n  }\n\n  // Load article data on mount\n  componentDidMount() {\n      let article = this.props.match.params.article;\n      let language = this.props.match.params.language ? this.props.match.params.language : 'en';\n      this.getData(article, language);\n  }\n\n  // Load article data on location update\n  componentDidUpdate(prevProps) {\n    const locationChanged = this.props.location !== prevProps.location;\n\n    if (locationChanged) {\n      // Reset page content\n      this.sidebar.current.innerHTML = '';\n      this.text.current.innerHTML = 'Getting your article from Wikipedia...';\n      this.setState({\n          image: '',\n          hover: {\n            show: false,\n            position: [0, 0],\n            article: ''\n          }\n      });\n\n      // Scroll back to top\n      window.scrollTo(0, 0);\n\n      // Get new article data\n      let article = this.props.match.params.article;\n      let language = this.props.match.params.language ? this.props.match.params.language : 'en';\n      this.getData(article, language);\n    }\n  }\n\n  // Get article data from wikipedia API\n  async getData(query, language) {\n    query = decodeURIComponent(query);\n\n    // Set article title to query\n    this.setState({\n        title: query\n    });\n    // Replace document title with article title\n    document.title = query.replace(/_/g, ' ') + ' - minimalpedia';\n    // Reset hover preview\n    this.setState({\n      hover: {\n        show: false,\n        position: [0, 0],\n        article: ''\n      }\n    });\n\n    // Set timeout to update loading message after 10 seconds if still loading\n    let loadingTimeout = setTimeout(() => {\n      this.text.current.innerHTML = 'Still loading the article from Wikipedia...';\n    }, 10000);\n\n    // Get information using wikipedia API\n    wiki({ apiUrl: `https://${language}.wikipedia.org/w/api.php` }).page(query).then((page) => {\n        // Get image\n        page.mainImage().then(image => {\n          this.setState({\n            image\n          });\n        })\n\n        // Get and process HTML\n        page.html().then(html => {\n          clearTimeout(loadingTimeout);\n          this.processHtml(html);\n        })\n    }).catch(err => {\n      clearTimeout(loadingTimeout);\n\n      // Replace common errors with custom error messages\n      if (String(err) === \"Error: No article found\") {\n        err = 'Sorry, but we couldn\\'t find this article on Wikipedia'\n      }\n\n      // Display error\n      this.text.current.innerHTML = err;\n    });\n  }\n\n  // Process HTML from wikipedia for use on the page\n  processHtml(html) {\n    // Parse HTML\n    let parser = new DOMParser();\n    let el = parser.parseFromString('<div>' + html + '</div>', 'text/html');\n\n    // Replace links\n    el.querySelectorAll('a').forEach(a => {\n      // Link the link is pointing to\n      let to = a.getAttribute('href');\n\n      a.addEventListener('click', evt => {\n        evt.preventDefault();\n\n        // Is link to another article? Open link with react-router\n        if (/^\\/wiki\\/((?!File:).)*$/.test(to)) {\n          // Open Wiki article\n          let article = encodeURIComponent(to.substr(6));\n          let language = this.props.match.params.language ? this.props.match.params.language : 'en';\n          this.props.history.push('/wiki/' + article + '/' + language);\n\n        // Is link to Wikipedia file? Redirect to Wikipedia\n        } else if (/^\\/wiki\\/File:.*$/.test(to)) {\n          var wikipediaFile = window.open(`https://${this.props.match.params.language}.wikipedia.org${to}`, '_blank');\n          wikipediaFile.focus();\n\n        // Is link to anchor? Scroll to anchor smoothly\n        } else if (to.charAt(0) === '#') {\n          document.querySelector(to).scrollIntoView({\n            behavior: 'smooth'\n          });\n\n        // Else it is an external link - open the link in a new tab\n        } else {\n          var newTab = window.open(to, '_blank');\n          newTab.focus();\n        }\n      });\n\n      // HOVER PREVIEW\n      // Is the link hovered on?\n      let isOnHover = false;\n      // Current article when the link was hovered on. \n      // This is to prevent opening the hover preview after article change\n      let pageOnHoverStart = '';\n\n      a.addEventListener('mouseover', evt => {\n        // Only show hover previews on Wikipedia articles\n        if (/^\\/wiki\\/((?!File:).)*$/.test(to)) {\n          isOnHover = true;\n          pageOnHoverStart = this.state.title.substr();\n\n          // Update state to hover article\n          let article = to.substr(6);\n          this.setState((state) => {\n            return {\n              hover: {\n                ...state.hover,\n                article,\n                position: [ evt.pageY, evt.pageX ]\n              }\n            }\n          });\n          \n          // Wait 500ms before showing preview\n          setTimeout(() => {\n            // Test if still hovering element and still on same page\n            if (isOnHover && pageOnHoverStart === this.state.title) {\n              // Show preview\n              this.setState((state) => {\n                return {\n                  hover: {\n                    ...state.hover,\n                    show: true\n                  }\n                }\n              });\n            }\n          }, 500);\n        }\n      });\n\n      a.addEventListener('mouseleave', evt => {\n        isOnHover = false;\n\n        // Hide hover preview\n        this.setState((state) => {\n          return {\n            hover: {\n              ...state.hover,\n              show: false\n            }\n          }\n        });\n      })\n    });\n\n    // Remove specific style attributes\n    let elementsWithStyle = el.querySelectorAll('[style]:not([style=\"\"]');\n    if (elementsWithStyle) {\n      // This regex will be selecting the following CSS styles and their values:\n      // - background\n      // - background-color\n      // - border\n      // - border-*\n      // - color\n      // - float\n      // - width\n      // - font-size\n      let styleRegex = /(background(-color)?|border(-[^:]*)?|color|float|width|font-size):.*?(;|$)/gi;\n      elementsWithStyle.forEach(element => {\n        let style = element.getAttribute('style');\n\n        // Remove attributes stated above from the element style\n        style = style.replace(styleRegex, '');\n\n        element.setAttribute('style', style);\n      });\n    }\n\n    /////// PROCESS SIDEBAR ///////\n    // Extract sidebar\n    let sidebar = el.querySelectorAll('table.infobox')[0];\n\n    if (!sidebar) {\n      sidebar = el.querySelectorAll('table.vertical-navbox')[0];\n    }\n\n    // Only process sidebar if a sidebar exists\n    if (sidebar) {\n      // Remove images from sidebar\n      let images = sidebar.querySelectorAll('.image');\n      if (images) {\n        images.forEach(element => {\n          element.remove()\n        });\n      }\n\n\n      // Remove wikipedia styles from sidebar table\n      sidebar.removeAttribute('style');\n      let elementsWithStyle = sidebar.querySelectorAll('[style]:not([style=\"\"]');\n      if (elementsWithStyle) {\n        elementsWithStyle.forEach(element => {\n          element.removeAttribute('style')\n        });\n      }\n\n      // Remove first two lines of table as they are simply the article title\n      let amountRemoved = 0;\n      sidebar.querySelectorAll('tr').forEach(element => {\n        if (amountRemoved < 2) {\n          element.remove();\n        } else {\n          return false;\n        }\n        amountRemoved++;\n      });\n\n      // Insert sidebar into page\n      this.sidebar.current.innerHTML = '';\n      this.sidebar.current.appendChild(sidebar);\n    }\n\n    /////// PROCESS TRIGHT THUMBNAILS ///////\n    // Extract thumbnails\n    let thumbnails = el.querySelectorAll('div.thumb.tright');\n\n    if (thumbnails) {\n      thumbnails.forEach(element => {\n        this.sidebar.current.appendChild(element);\n      });\n    }\n\n    /////// PROCESS MAIN CONTENT ///////\n    let content = el.querySelectorAll('div')[0];\n\n    // Remove sidebar\n    // content.querySelectorAll('table.infobox')[0].remove();\n\n    // Remove edit links\n    content.querySelectorAll('.mw-editsection').forEach(el => {\n      el.remove()\n    });\n\n    // Insert main content into page\n    this.text.current.innerHTML = '';\n    this.text.current.appendChild(content);\n  }\n\n  // Toggle sidebar open/closed\n  toggleSidebar() {\n    this.setState(state => {\n      return {\n        sidebarOpen: (!state.sidebarOpen)\n      }\n    });\n  }\n\n render() {\n   return (\n     <div>\n      <Nav language={ this.props.match.params.language ? this.props.match.params.language : 'en' } />\n\n      <div className=\"md:flex md:min-h-screen article\">\n        {/* Hover Preview shown when hovering over other Wikipedia articles */}\n        <HoverPreview \n          language={ this.props.match.params.language ? this.props.match.params.language : 'en' }\n          position={ this.state.hover.position } \n          show={ this.state.hover.show } \n          article={ this.state.hover.article } />\n\n        {/* Sidebar */}\n        {/* Sidebar toggle */}\n        <div className=\"sidebar w-screen md:hidden p-3 pl-16 flex items-center\" onClick={this.toggleSidebar}>\n          { this.state.sidebarOpen ? <ChevronUp /> : <ChevronDown /> } <p className=\"text-base ml-3 cursor-pointer\">Sidebar</p>\n        </div>\n\n        <div className={\"w-screen md:min-h-screen w-screen md:w-1/3 pl-16 p-6 sidebar \" + ((!this.state.sidebarOpen) ? 'hidden md:block' : '') }>\n          <img className=\"w-100\" src={this.state.image} alt=\"\" />\n          <div className=\"sidebar-table\" ref={ this.sidebar } />\n        </div>\n\n        {/* Main content */}\n        <div className=\"w-screen md:w-2/3 pl-16 md:pl-6 p-6 info\">\n          <h2>{ this.state.title.replace(/_/g, ' ') }</h2>\n          <div ref={ this.text }>Getting your article from Wikipedia...</div>\n        </div>\n        \n      </div>\n     </div>\n   );\n }\n}\nexport default withRouter(Article);","import React, { Component } from 'react'\n\nexport default class Search extends Component {\n    state = {\n        query: '' // Current search query\n    }\n\n    constructor(props) {\n        super(props);\n  \n        this.updateQuery = this.updateQuery.bind(this);\n        this.handleLanguageChange = this.handleLanguageChange.bind(this);\n        this.searchbox = React.createRef();\n        this.language = React.createRef();\n    }\n\n    // Update search query\n    updateQuery(evt) {\n        this.setState({\n            query: evt.target.value\n        });\n        this.props.onChange(evt.target.value);\n    }\n\n    // Handle language change update\n    handleLanguageChange(evt) {\n        this.props.onLanguageChange(evt.target.value);\n        this.language.current.blur();\n    }\n\n    // Focus searchbox when component mounts\n    componentDidMount() {\n        this.searchbox.current.focus();\n    }\n\n    render() {\n        return (\n            <div>\n                <div className={ \"head px-16 pt-10 \" + (this.props.expanded ? 'md:pt-32' : '') }>\n                    {/* Heading */}\n                    <div className=\"heading text-center text-2xl\">\n                        <span className=\"font-light\">minimal</span><span className=\"font-normal\">pedia</span>\n                    </div>\n\n                    {/* Searchbox and language selector */}\n                    <div className={ \"search \" + (this.props.expanded ? 'pt-8 md:pt-32' : 'pt-4') }>\n                        <select \n                            className={\"w-full outline-none bg-transparent whiteInDarkMode language-select \" + (this.props.expanded ? '' : 'hidden') }\n                            onChange={this.handleLanguageChange}\n                            ref={ this.language }\n                            value={ this.props.language }>\n\n                            {\n                                this.props.availibleLanguages.map(lang => (\n                                    <option key={ lang.value } value={ lang.value }>{ lang.name }</option>\n                                ))\n                            }\n                        </select>\n                        <input \n                            type=\"text\" \n                            className=\"search-box h-24 w-full outline-none text-5xl font-bold bg-transparent\" \n                            placeholder=\"Search...\" \n                            value={ this.state.query } \n                            onChange={ this.updateQuery } \n                            ref={ this.searchbox }\n                            autoFocus />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","/**\n * Single search result\n */\nimport React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class Result extends Component {\n    render() {\n        const result = this.props.result;\n\n        return (\n            <div key={result.title}>\n                <Link to={\"/wiki/\" + encodeURIComponent(result.title) + '/' + this.props.language} className=\"result overflow-hidden h-48 p-4 flex mb-12 no-underline color-inherit\">\n                        <div className=\"result-img-container\">\n                            <img className=\"result-img h-32 pr-12\" src={result.image} alt=\"\" />\n                        </div>\n                        <div className=\"result-text-container\">\n                            <h2>{result.title}</h2>\n                            <p className=\"text-grey text-xs leading-loose\">{result.text}</p>\n                        </div>\n                </Link>\n            </div>\n        )\n    }\n}","/**\n * List of search results\n */\nimport React, { Component } from 'react'\nimport Result from './Result'\n\nexport default class ResultList extends Component {\n    render() {\n        const results = this.props.results;\n\n        // Set message returned if there are no results (yet)\n        let message = 'Let me ask Wikipedia for that...'\n        if (this.props.totalResults === 0) {\n            message = 'I could not find any results';\n        }\n\n        return (\n            <div className=\"results px-16 mt-3 display-none\" id=\"results\">\n                {\n                    // Show results if found, otherwise display message\n                    Object.keys(results).length > 0 ? Object.keys(results).map(result => (\n                        <Result key={results[result].title} result={results[result]} language={ this.props.language } />\n                    )) : (\n                        <div className=\"result overflow-hidden h-48 p-4 flex mb-12 no-underline color-inherit\">\n                            <div className=\"w-100\">\n                                <h2 className=\"font-light\">\n                                    {message}\n                                </h2>\n                            </div>\n                        </div>\n                    )\n                }\n            </div>\n        )\n    }\n}","let languages = [\n    {\n        name: 'english',\n        value: 'en'\n    },\n    {\n        name: 'deutsch',\n        value: 'de'\n    },\n    {\n        name: 'español',\n        value: 'es'\n    },\n    {\n        name: 'italiano',\n        value: 'it'\n    },\n    {\n        name: '日本語',\n        value: 'ja'\n    },\n    {\n        name: 'polski',\n        value: 'pl'\n    },\n    {\n        name: 'pусский',\n        value: 'ru'\n    },\n    {\n        name: 'français',\n        value: 'fr'\n    },\n    {\n        name: 'nederlands',\n        value: 'nl'\n    },\n    {\n        name: \"العربية\",\n        value: \"ar\"\n    }, \n    {\n        name: \"dansk\",\n        value: \"da\"\n    }, \n    {\n        name: \"português\",\n        value: \"pt\"\n    }, \n    {\n        name: \"türkçe\",\n        value: \"tr\"\n    }, \n    {\n        name: \"中文\",\n        value: \"zh\"\n    }\n];\n\nexport default languages;","/**\n * Homepage/Search page\n */\nimport React, { Component } from 'react'\n\nimport SearchBox from './SearchBox'\nimport ResultList from './ResultList'\n\nimport search from '../../utils/search';\nimport languages from './languages';\n\nimport './home.css'\n\nexport default class Home extends Component {\n  state = {\n    query: '', // Current search query\n    languages: [], // List of availible languages\n    language: 'en', // Current language\n    results: {}, // Current search results\n    totalResults: 10 // Number of results found\n  }\n\n  constructor(props) {\n    super(props);\n\n    // Set availible languages\n    this.state.languages = languages;\n\n    // Set language to navigator language\n    let browserLanguage = navigator.language.substr(0, 2);\n    let language = this.state.languages.find(language => language.value === browserLanguage)\n    if (language) {\n      this.state.language = browserLanguage;\n    }\n\n    this.handleSearchUpdate = this.handleSearchUpdate.bind(this);\n    this.handleLanguageUpdate = this.handleLanguageUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    // Update title. This will reset any title set by the article pages\n    document.title = 'minimalpedia';\n  }\n\n  // Handle update of search query\n  handleSearchUpdate(query) {\n    this.setState({\n      query\n    });\n    search(query, state => {\n      this.setState(state)\n    }, () => {\n      return this.state\n    }, this.state.language);\n  }\n\n\n  // Handle update of language\n  handleLanguageUpdate(language) {\n    this.setState({\n      language\n    });\n  }\n\n render() {\n   return (\n     <div>\n       <SearchBox \n        expanded={ this.state.query === '' } \n        onChange={ this.handleSearchUpdate } \n        onLanguageChange={ this.handleLanguageUpdate } \n        language={ this.state.language }\n        availibleLanguages={ this.state.languages } />\n       { this.state.query !== '' && (<ResultList results={ this.state.results } totalResults={this.state.totalResults} language={ this.state.language } />) }\n     </div>\n   );\n }\n}","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Footer from './components/Footer'\n\nimport Article from './pages/Article/Article';\nimport Home from './pages/Home/Home';\n\nconst Routes = (props) => (\n  <Router {...props}>\n    <div>\n      <Switch>\n        <Route path=\"/wiki/:article?/:language?\" component={Article} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n      <Footer />\n    </div>\n  </Router>\n);\nexport default Routes;","import React, { Component } from 'react'\nimport Routes from './Routes'\n\n// Fonts\nimport 'typeface-open-sans';\nimport 'typeface-merriweather';\n\n// Styles\nimport './styles/tailwind.css'\nimport './styles/style.css'\n\nexport default class App extends Component {\n  render() {\n    return <Routes />\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}